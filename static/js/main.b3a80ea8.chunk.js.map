{"version":3,"sources":["assets/logo.svg","components/Header.jsx","assets/calories-icon.svg","assets/protein-icon.svg","assets/carbs-icon.svg","assets/fat-icon.svg","components/KeyData.jsx","components/ScoreChart.jsx","components/ActivityToolType.jsx","service/mockedData.js","components/UserActivity.jsx","components/SessionsToolType.jsx","components/UserAverageSessions.jsx","components/UserPerformance.jsx","assets/iconMeditation.svg","assets/iconBike.svg","assets/iconSwim.svg","assets/iconBell.svg","components/LeftBar.jsx","components/UserInfos.jsx","pages/UserPage.jsx","pages/HomePage.jsx","pages/ErrorPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["Head","styled","header","Nav","nav","Header","src","logo","alt","to","Wrapper","div","Infos","InfosData","p","InfosText","KeyData","icon","info","text","Container","Title","h2","Text","Score","span","ScoreChart","data","score","value","todayScore","ResponsiveContainer","width","height","PieChart","Pie","dataKey","innerRadius","outerRadius","startAngle","map","entry","index","Cell","cornerRadius","fill","CustomToolType","active","payload","mockUserInfos","id","a","axios","get","res","console","log","mockUserActivity","mockUserAverageSessions","mockUserPerformance","Icon","props","color","Legend","Info","UserActivity","useState","setData","useParams","useEffect","request","alert","sessions","getData","length","i","day","BarChart","barGap","barCategoryGap","CartesianGrid","vertical","strokeDasharray","XAxis","tickLine","tick","fontSize","stroke","dy","YAxis","yAxisId","type","domain","tickCount","axisLine","orientation","dx","hide","Tooltip","content","ActivityToolType","Bar","barSize","radius","SessionsToolType","UserAverageSessions","formatData","LineChart","Line","padding","left","strokeWidth","dot","activeDot","r","UserPerformance","kind","RadarChart","cx","cy","PolarGrid","gridType","PolarAngleAxis","Radar","fillOpacity","NavText","LeftBar","iconMedation","iconSwim","iconBike","iconBell","Name","UserInfos","name","Main","main","Content","BottomChart","UserPage","userInfos","firstName","caloriesIcon","keyData","calorieCount","proteinsIcon","proteinCount","glucidesIcon","carbohydrateCount","lipidesIcon","lipidCount","HomePage","ErrorPage","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3a80ea8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.c9828dd8.svg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport logo from '../assets/logo.svg';\r\n\r\nconst Head = styled.header ` \r\n    position:relative;\r\n    display: flex;\r\n\twidth: 100%;\r\n\theight: 91px;\r\n    background: #020203;\r\n\tpadding: 0 87px 0 29px;\r\n\tbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n    z-index:1;\r\n\timg {\r\n\t\twidth: 178px;\r\n\t\tmargin-right: 150px;\r\n\t\t@media (max-width: 1025px) {\r\n\t\t\tmargin-right: 70px;\r\n\t\t}\r\n\t}\r\n`\r\nconst Nav = styled.nav `\r\n    width: 80%;\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\ta {\r\n\t\tcolor: white;\r\n\t\tfont-weight: 500;\r\n\t\tfont-size: 24px;\r\n\t}\r\n\r\n`\r\n\r\nfunction Header() {\r\n    return (  \r\n        <Head>\r\n            <img src={logo} alt=\"sportSee\" aria-label=\"logo sportSee\"/>\r\n            <Nav>\r\n                <NavLink to='/'>Accueil</NavLink>\r\n\t\t\t\t<NavLink to='#'>Profil</NavLink>\r\n\t\t\t\t<NavLink to='#'>Réglages</NavLink>\r\n\t\t\t\t<NavLink to='#'>Communauté</NavLink>\r\n            </Nav>\r\n        </Head>\r\n    );\r\n}\r\n\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/calories-icon.5db5a3af.svg\";","export default __webpack_public_path__ + \"static/media/protein-icon.c2859796.svg\";","export default __webpack_public_path__ + \"static/media/carbs-icon.aa0e7466.svg\";","export default __webpack_public_path__ + \"static/media/fat-icon.82c6cb9f.svg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types'; \r\n\r\nconst Wrapper = styled.div`\r\n    display:flex;\r\n    padding:2em;\r\n    @media (max-width: 1208px) {\r\n        padding:1em\r\n    }\r\n`\r\n    \r\nconst Infos = styled.div`\r\n    display:flex;\r\n    flex-direction:column;\r\n    margin-left:24px;\r\n`\r\n\r\nconst InfosData = styled.p`\r\n    font-weight: bold;\r\n    font-size: 20px;\r\n    line-height: 24px;\r\n    color: #282D30;\r\n    margin-bottom:2px;\r\n`\r\n\r\nconst InfosText = styled.p`\r\n    font-weight: 500;\r\n    font-size: 14px;\r\n    line-height: 24px;\r\n    color: #74798C;\r\n`\r\n/** display icon with user infos \r\n * @param  {string} icon\r\n * @param  {string} info\r\n * @param  {string} text\r\n * @return {JSX}\r\n */\r\nfunction KeyData({icon,info,text}) {\r\n    return (  \r\n    <Wrapper>\r\n        <img src={icon} alt=\"calories icon\"/>\r\n        <Infos>\r\n            <InfosData>{info}</InfosData>\r\n            <InfosText>{text}</InfosText>\r\n        </Infos>\r\n    </Wrapper> );\r\n}\r\n\r\nexport default KeyData;\r\nKeyData.propTypes = {\r\n  icon: PropTypes.any,\r\n  info: PropTypes.string,\r\n  text: PropTypes.string,\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { ResponsiveContainer, PieChart, Pie,Cell } from 'recharts';\r\nimport PropTypes from 'prop-types'; \r\n\r\nconst Container = styled.div`\r\n    position:relative;\r\n    width:258px;\r\n    height:263px;\r\n`\r\n\r\nconst Title = styled.h2`\r\n    position:absolute;\r\n    left: 20%;\r\n    top: 15%;\r\n    transform: translate(-50%, -50%);\r\n    font-weight: 500;\r\n    font-size: 15px;\r\n    line-height: 24px;\r\n    color: #20253A;\r\n    font-weight: 700;\r\n`\r\n\r\nconst Text = styled.p`\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    font-size: 15px;\r\n    line-height: 26px;\r\n    font-weight: 700;\r\n    text-align: center;\r\n    color: #74798C;\r\n`\r\n\r\nconst Score = styled.span`\r\n    color: rgba(0, 0, 0, 0.8);\r\n    font-weight: 700;\r\n    font-size: 26px;\r\n`\r\n/** create a PieChart with score value\r\n * @param  {object} {data}\r\n * @return {JSX}  \r\n */\r\nfunction ScoreChart({data}) {\r\n    \r\n    const score = [\r\n        { value: data.todayScore || data.score},\r\n        { value: 1 - data.todayScore || data.score }, \r\n    ];\r\n    \r\n    return ( \r\n        <Container>\r\n            <Title>Score</Title>\r\n            <ResponsiveContainer width='100%' height='100%'>\r\n                <PieChart >\r\n                <Pie data={score} dataKey=\"value\" innerRadius={70} outerRadius={85} startAngle={90}  >\r\n                {score.map((entry, index) => (\r\n                    index === 0 \r\n                     ?  <Cell key={`cell-${index}`} cornerRadius={10} fill=\"#ff0000\"/>\r\n                     :  <Cell key={`cell-${index}`} fill=\"#ffffff\"/>\r\n                ))}\r\n                </Pie>\r\n                </PieChart>\r\n            </ResponsiveContainer>\r\n            <Text>\r\n                <Score>{score[0].value * 100 }%<br/></Score>\r\n                de votre<br/> objectif\r\n            </Text>\r\n        </Container>\r\n     );\r\n}\r\n\r\nexport default ScoreChart;\r\n\r\nScoreChart.propTypes = {\r\ndata: PropTypes.object\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Container = styled.div`\r\nbackground-color:#E60000;\r\nwidth:55px;\r\nheight:75px;\r\ndisplay:flex;\r\nflex-direction:column;\r\nalign-items:center;\r\n`\r\nconst Text = styled.p `\r\ncolor:white;\r\nfont-weight: 500;\r\nfont-size: 10px;\r\nline-height: 24px;\r\nmargin-top:7px;\r\n`\r\n\r\n/** create a custom tooltype for the user activity barChart\r\n * @param  {bool} active\r\n * @param  {array} payload\r\n * @return {JSX}\r\n */\r\n\r\nfunction CustomToolType({active, payload}) {\r\n    if (active){\r\n    return (\r\n        <Container>\r\n            <Text>{payload[0].value}kg</Text>\r\n            <Text>{payload[1].value}Kcal</Text>\r\n        </Container>\r\n    \r\n     );\r\n    }\r\n    return null\r\n}\r\n\r\nexport default CustomToolType;\r\n\r\nCustomToolType.propTypes = {\r\n\tactive: PropTypes.bool,\r\n\tpayload: PropTypes.array,\r\n};","import axios from 'axios';\r\n\r\n/**\r\n * Get user infos\r\n *\r\n * @param {string} id User id\r\n * @returns {object} Response\r\n */\r\n export const mockUserInfos = async (id) => {\r\n\ttry {\r\n\t\tconst res = await axios.get(`./../../${id}/info.json`);\r\n\t\treturn res.data;\r\n\t} catch (e) {\r\n\t\tconsole.log(e);\r\n\t}\r\n};\r\n\r\n\r\n/**\r\n * Get user activity \r\n *\r\n * @param {string} id User id\r\n * @returns {object} Response\r\n */\r\nexport const mockUserActivity = async (id) => {\r\n\ttry {\r\n\t\tconst res = await axios.get(`./../../${id}/activity.json`);\r\n\t\treturn res.data;\r\n\t} catch (e) {\r\n\t\tconsole.log(e);\r\n\t}\r\n};\r\n\r\n/**\r\n * Get user average session \r\n *\r\n * @param {string} id User id\r\n * @returns {object} Response\r\n */\r\nexport const mockUserAverageSessions = async (id) => {\r\n\ttry {\r\n\t\tconst res = await axios.get(`./../../${id}/averagesessions.json`);\r\n\t\treturn res.data;\r\n\t} catch (e) {\r\n\t\tconsole.log(e);\r\n\t}\r\n};\r\n\r\n/**\r\n * Get user performance \r\n *\r\n * @param {string} id User id\r\n * @returns {object} Response\r\n */\r\nexport const mockUserPerformance = async (id) => {\r\n\ttry {\r\n\t\tconst res = await axios.get(`./../../${id}/performance.json`);\r\n\t\treturn res.data;\r\n\t} catch (e) {\r\n\t\tconsole.log(e);\r\n\t}\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useState,useEffect } from 'react';\r\n//import {getUserActivity} from '../service/data'\r\nimport { useParams } from 'react-router';\r\nimport {BarChart,Bar,XAxis,YAxis,CartesianGrid,Tooltip, ResponsiveContainer} from \"recharts\";\r\nimport ActivityToolType from './ActivityToolType';\r\nimport { mockUserActivity } from '../service/mockedData';\r\n\r\nconst Wrapper = styled.div`\r\n    margin-bottom: 3em;\r\n\theight: 320px;\r\n\tborder-radius: 5px;\r\n\tbackground-color: #fbfbfb;\r\n\tbox-shadow: 0px 2px 4px rgba(0, 0, 0, 0.0212249);\r\n\tpadding: 25px;\r\n\t\r\n\t@media (max-width: 1025px) {\r\n      padding-left:0;\r\n    }\r\n`\r\nconst Head = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n\t`\r\n\r\nconst Title= styled.h2`\r\n    font-size: 15px;\r\n    line-height: 24px;\r\n    color: #20253A;\r\n`\r\n\r\nconst Text = styled.p`\r\n\tfont-weight: 500;\r\n\tfont-size: 14px;\r\n\tcolor: #74798c;\r\n\tmargin-left: 10px;\r\n`\r\n\r\nconst Icon = styled.div`\r\n\theight: 8px;\r\n\twidth: 8px;\r\n\tborder-radius: 50%;\r\n\tbackground-color: ${(props) => props.color};\r\n\talign-self: center;\r\n\tmargin-left: 30px;\r\n`\r\n\r\nconst Legend = styled.div`\r\n\tdisplay: flex;\r\n`\r\n\r\nconst Info = styled.div`\r\n    display: flex;\r\n    align-items:center;\r\n`\r\n/**\r\n * Render a BarChart with user activity Data\r\n * @return {JSX}\r\n */\r\nfunction UserActivity() {\r\n\r\n    const [data, setData] = useState([]);\r\n\tconst {id} = useParams();\r\n\r\n    useEffect(() => {\r\n\t\tconst getData = async () => {\r\n\t\t\tconst request = await mockUserActivity(id);\r\n\t\t\tif (!request) return alert('data error');\r\n\t\t\t\r\n\t\t\tsetData(request.data.sessions);\r\n\t\t};\r\n\t\tgetData();\r\n\t}, [id]);\r\n\tif (data.length === 0) return null;\r\n\t//format data.day\r\n\tfor (let i = 0 ; i < data.length ; i ++){data[i].day = i + 1;}\r\n\t//console.log(data)\r\n    return (  \r\n        <Wrapper>\r\n            <Head>\r\n                <Title>Activité quotidienne</Title>\r\n                <Legend>\r\n\t\t\t\t\t<Info>\r\n\t\t\t\t\t\t<Icon color='#282D30' />\r\n\t\t\t\t\t\t<Text>Poids (kg)</Text>\r\n\t\t\t\t\t</Info>\r\n\t\t\t\t\t<Info>\r\n\t\t\t\t\t\t<Icon color='#E60000' />\r\n\t\t\t\t\t\t<Text>Calories brûlées (kCal)</Text>\r\n\t\t\t\t\t</Info>\r\n\t\t\t\t</Legend>\r\n            </Head>\r\n            <ResponsiveContainer>\r\n                <BarChart data={data} barGap={8} barCategoryGap={1}>\r\n                    <CartesianGrid vertical={false} strokeDasharray=\"1 1\" />\r\n                    <XAxis dataKey=\"day\" tickLine={false} tick={{fontSize: 14, stroke:'#9B9EAC'}} dy={15} />\r\n                    <YAxis yAxisId=\"kilogram\" dataKey=\"kilogram\" type=\"number\" domain={['dataMin - 2', 'dataMax + 1']} tickCount=\"3\" axisLine={false} orientation=\"right\" tickLine={false} tick={{fontSize: 14, stroke:'#9B9EAC'}} dx={15}/>\r\n                    <YAxis yAxisId=\"calories\" dataKey=\"calories\" type=\"number\" domain={['dataMin - 20', 'dataMax + 10']}  hide={true}/>\r\n                    <Tooltip content={<ActivityToolType/>}/>\r\n                    <Bar yAxisId=\"kilogram\" dataKey=\"kilogram\" fill=\"#282D30\" barSize={7} radius={[50, 50, 0, 0]}/>\r\n                    <Bar yAxisId=\"calories\" dataKey=\"calories\" fill=\"#E60000\" barSize={7} radius={[50, 50, 0, 0]}/>\r\n                </BarChart>\r\n            </ResponsiveContainer>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default UserActivity;\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Container = styled.div`\r\nbackground-color:white;\r\nwidth:45px;\r\nheight:30px;\r\ndisplay:flex;\r\nflex-direction:column;\r\nalign-items:center;\r\n`\r\nconst Text = styled.p `\r\ncolor:black;\r\nfont-weight: 500;\r\nfont-size: 10px;\r\nline-height: 24px;\r\nmargin-top:4px;\r\n`\r\n\r\nfunction SessionsToolType({active, payload}) {\r\n    if (active){\r\n    return (\r\n        <Container>\r\n            <Text>{payload[0].value}min</Text>\r\n        </Container>\r\n    \r\n     );\r\n    }\r\n    return null\r\n}\r\n\r\nexport default SessionsToolType;\r\n\r\nSessionsToolType.propTypes = {\r\n\tactive: PropTypes.bool,\r\n\tpayload: PropTypes.array,\r\n};","import React, {useState,useEffect} from 'react';\r\nimport styled from 'styled-components';\r\n//import { getUserAverageSessions } from '../service/data';\r\nimport { useParams } from 'react-router';\r\nimport {ResponsiveContainer,LineChart,Line,XAxis,YAxis,Tooltip} from \"recharts\";\r\nimport SessionsToolType from './SessionsToolType.jsx';\r\nimport { mockUserAverageSessions } from './../service/mockedData';\r\n\r\nconst Container = styled.div`\r\n    position: relative;\r\n\twidth: 258px;\r\n\theight: 263px;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: space-between;\r\n\tbackground: #ff0000;\r\n\tbox-shadow: 0px 2px 4px rgba(0, 0, 0, 0.0212249);\r\n\tborder-radius: 5px;\r\n\r\n`\r\n\r\nconst Title = styled.h2`\r\nposition: absolute;\r\n\tfont-weight: 500;\r\n\tfont-size: 15px;\r\n\tpadding: 29px 34px 0 34px;\r\n\tcolor: rgba(255, 255, 255, 0.7);\r\n`\r\n\r\n/**\r\n * Render a LineChart with user average sessions Data\r\n * @return {JSX}\r\n */\r\n\r\nfunction UserAverageSessions() {\r\n\r\n    const [data, setData] = useState([]);\r\n\tconst {id} = useParams();\r\n\r\n    useEffect(() => {\r\n\t\tconst getData = async () => {\r\n\t\t\tconst request = await mockUserAverageSessions(id);\r\n\t\t\tif (!request) return alert('data error');\r\n\t\t\tconst formatData = request.data.sessions.map((data) => {\r\n\t\t\t\tswitch (data.day) {\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\treturn { ...data, day: 'L' };\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\treturn { ...data, day: 'M' };\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\treturn { ...data, day: 'M' };\r\n\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\treturn { ...data, day: 'J' };\r\n\t\t\t\t\tcase 5:\r\n\t\t\t\t\t\treturn { ...data, day: 'V' };\r\n\t\t\t\t\tcase 6:\r\n\t\t\t\t\t\treturn { ...data, day: 'S' };\r\n\t\t\t\t\tcase 7:\r\n\t\t\t\t\t\treturn { ...data, day: 'D' };\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn {...data };\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tsetData(formatData);\r\n\t\t};\r\n\t\tgetData();\r\n\t}, [id]);\r\n\tif (data.length === 0) return null;\r\n\t\r\n    // console.log(data)\r\n    return (\r\n        <Container>\r\n            <Title>Durée moyenne des sessions</Title>\r\n            <ResponsiveContainer width='100%' height='100%'>\r\n            <LineChart data={data} >\r\n                <XAxis type=\"category\"  dataKey=\"day\" tickLine={false} tick={{fontSize: 14, stroke:'rgba(255, 255, 255, 0.7)'}} />\r\n                <YAxis dataKey=\"sessionLength\" domain={[0, 'dataMax + 30']} hide={true}/>\r\n                <Tooltip content={<SessionsToolType/>}/>\r\n                <Line type=\"monotone\" padding={{ left: 10 }} dataKey=\"sessionLength\" stroke=\"rgba(255, 255, 255, 0.7)\" strokeWidth={2} dot={false} activeDot={{ r: 4, strokeWidth: 4, stroke:'white' }}/>\r\n            </LineChart>\r\n            </ResponsiveContainer>\r\n        </Container>\r\n      );\r\n}\r\n\r\nexport default UserAverageSessions;\r\n\r\n","import React, {useState,useEffect} from 'react';\r\nimport styled from 'styled-components';\r\n//import { getUserPerformance } from '../service/data';\r\nimport { useParams } from 'react-router';\r\nimport {Radar,RadarChart,PolarGrid,PolarAngleAxis,ResponsiveContainer} from \"recharts\";\r\nimport { mockUserPerformance } from '../service/mockedData';\r\n\r\nconst Container = styled.div`\r\n    position: relative;\r\n\twidth: 258px;\r\n\theight: 263px;\r\n\tbackground: #282D30;\r\n\tbox-shadow: 0px 2px 4px rgba(0, 0, 0, 0.0212249);\r\n\tborder-radius: 5px;\r\n\r\n`\r\n/**\r\n * Render a RadarChart with user performance data\r\n * @return {JSX}\r\n */\r\n\r\nfunction UserPerformance() {\r\n    const [data, setData] = useState([]);\r\n\tconst {id} = useParams();\r\n\r\n    useEffect(() => {\r\n\t\tconst getData = async () => {\r\n\t\t\tconst request = await mockUserPerformance(id);\r\n\t\t\tif (!request) return alert('data error');\r\n\t\t\tconst formatData = request.data.data.map((data) => {\r\n\t\t\t\tswitch (data.kind) {\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\treturn { ...data, kind: 'Cardio' };\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\treturn { ...data, kind: 'Energie' };\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\treturn { ...data, kind: 'Endurance' };\r\n\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\treturn { ...data, kind: 'Force' };\r\n\t\t\t\t\tcase 5:\r\n\t\t\t\t\t\treturn { ...data, kind: 'Vitesse' };\r\n\t\t\t\t\tcase 6:\r\n\t\t\t\t\t\treturn { ...data, kind: 'Intensité' };\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn {...data };\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tsetData(formatData);\r\n\t\t};\r\n\t\tgetData();\r\n\t}, [id]);\r\n\tif (data.length === 0) return null;\r\n\t\r\n\t//console.log(data)\r\n\r\n    return ( \r\n    <Container>\r\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n\t\t\t\t<RadarChart cx='50%' cy='50%' outerRadius='65%' data={data}>\r\n\t\t\t\t\t\t<PolarGrid gridType=\"polygon\" />\r\n\t\t\t\t\t\t<PolarAngleAxis\tdataKey=\"kind\" stroke='white' tickLine={false} axisLine={false}  tick={{ fontSize: 10 }}/>\r\n\t\t\t\t\t\t<Radar dataKey='value' stroke='#FF0101'\tfill='#FF0101' fillOpacity={0.7} />\r\n\t\t\t\t</RadarChart>\r\n            </ResponsiveContainer>\r\n    </Container> );\r\n}\r\n\r\nexport default UserPerformance;","export default __webpack_public_path__ + \"static/media/iconMeditation.6c31a277.svg\";","export default __webpack_public_path__ + \"static/media/iconBike.d516c0e8.svg\";","export default __webpack_public_path__ + \"static/media/iconSwim.e26dba43.svg\";","export default __webpack_public_path__ + \"static/media/iconBell.4fe7fb9f.svg\";","import React from 'react';\r\nimport iconMedation from '../assets/iconMeditation.svg'\r\nimport iconBike from '../assets/iconBike.svg'\r\nimport iconSwim from '../assets/iconSwim.svg'\r\nimport iconBell from '../assets/iconBell.svg'\r\nimport styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Container = styled.div `\r\n    overflow: hidden;\r\n    position:relative;\r\n`\r\n\r\nconst Nav = styled.div `\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content:space-between;\r\n    width : 117px;\r\n    height: 100vh;\r\n    background: #020203;\r\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n    /*margin-bottom: -5000px; \r\n    padding-bottom: 5000px; */\r\n    position:fixed;\r\n    top:0;\r\n    left:0;\r\n    height:100vh;\r\n\r\n\t\r\n`\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin:auto;\r\n    width: 64px;\r\n    position:absolute;\r\n    top:30%;\r\n    left:26px;\r\n    a{\r\n        display: flex;\r\n        height: 64px;\r\n        width: 64px;\r\n        margin-bottom: 20px;\r\n    }\r\n    \r\n`\r\n\r\nconst NavText = styled.p `\r\n    writing-mode: vertical-lr;\r\n    text-orientation: mixed;\r\n    transform: rotate(180deg);\r\n    position: absolute;\r\n    bottom: 59px;\r\n    left:42px;\r\n    font-weight: 500;\r\n    font-size: 12px;\r\n    line-height: 24px;\r\n    color:white;\r\n    margin:auto;\r\n`\r\n/** create sideBar with navlink\r\n * @return {JSX}\r\n */\r\nfunction LeftBar() {\r\n    return ( \r\n\r\n        <Container>\r\n            <Nav>\r\n                <Wrapper>\r\n                    <NavLink to='#'><img src={iconMedation} alt=\"icone meditation\" /></NavLink>\r\n                    <NavLink to='#'><img src={iconSwim} alt=\"icone nage\" /></NavLink>\r\n                    <NavLink to='#'><img src={iconBike} alt=\"icone vélo\" /></NavLink>\r\n                    <NavLink to='#'><img src={iconBell} alt=\"icone musculation\" /></NavLink>\r\n                </Wrapper>\r\n                <NavText>Copiryght, SportSee 2020</NavText>\r\n            </Nav>\r\n        </Container>\r\n     );\r\n}\r\n\r\nexport default LeftBar;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types'; \r\n\r\nconst Head = styled.header`\r\n  margin-bottom: 40px;\r\n  @media (max-width: 1203px) {\r\n\t\t\tmargin-left: 2em;\r\n\t\t}\r\n  h1 {\r\n    font-weight: 600;\r\n    font-size:48px;\r\n    margin-bottom:40px;\r\n  }\r\n`;\r\n\r\nconst Name = styled.span`\r\n  color: #ff0000;\r\n`;\r\n\r\n/**Render the userName\r\n* @param {string} name\r\n* @return {JSX}\r\n*/\r\n\r\nfunction UserInfos({name}) {\r\n\r\n    return (  \r\n          <Head>\r\n            <h1>Bonjour <Name>{name}</Name></h1>\r\n            <span>Félicitation ! Vous avez explosé vos objectifs hier 👏</span>\r\n          </Head>\r\n    );\r\n}\r\n\r\nexport default UserInfos;\r\n\r\n\r\nUserInfos.propTypes = {\r\n\tname: PropTypes.string,\r\n};","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useState,useEffect } from 'react';\r\n//import {getUserInfos} from '../service/data'\r\nimport { useParams } from 'react-router';\r\nimport caloriesIcon from '../assets/calories-icon.svg'\r\nimport proteinsIcon from '../assets/protein-icon.svg'\r\nimport glucidesIcon from '../assets/carbs-icon.svg'\r\nimport lipidesIcon from '../assets/fat-icon.svg'\r\nimport KeyData from '../components/KeyData';\r\nimport ScoreChart from '../components/ScoreChart';\r\nimport UserActivity from '../components/UserActivity';\r\nimport UserAverageSessions from '../components/UserAverageSessions';\r\nimport UserPerformance from '../components/UserPerformance';\r\nimport LeftBar from '../components/LeftBar';\r\nimport UserInfos from '../components/UserInfos';\r\nimport { mockUserInfos } from './../service/mockedData';\r\n\r\n\r\nconst Main = styled.main`\r\n  display:grid;\r\n  grid-template-columns: 117px auto;\r\n  margin: auto;\r\n  @media screen and (max-width: 1250px) {\r\n      grid-gap:1em;\r\n    }\r\n`\r\nconst Container = styled.div`\r\n  max-width: 1240px;\r\n  width: 100%;\r\n  margin: auto;\r\n  margin-top:2%;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  \r\n  aside {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n    max-width: 835px;\r\n    flex-direction: column;\r\n    margin: auto;\r\n    margin-left:0;\r\n    @media (max-width: 1208px) {\r\n      flex-direction: row;\r\n      margin: auto 0;\r\n      margin-right:6em;\r\n    }\r\n    > div {\r\n      margin: 20px 5px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BottomChart = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-gap:1em;\r\n  justify-content: space-between;\r\n`;\r\n\r\n/**Render the dashboard\r\n* @return {JSX}\r\n*/\r\nfunction UserPage() {\r\n  const [data, setData] = useState([]);\r\n\tconst {id} = useParams();\r\n  useEffect(() => {\r\n\t\tconst getData = async () => {\r\n\t\t\tconst request = await mockUserInfos(id);\r\n\t\t\tif (!request) return alert('data error');\r\n\t\t\tsetData(request.data);\r\n\t\t};\r\n\t\tgetData();\r\n\t}, [id]);\r\n\tif (data.length === 0) return null;\r\n\r\n    return (  \r\n      <Main>\r\n        <LeftBar />\r\n        <Container>\r\n        <UserInfos name={data.userInfos.firstName} />\r\n            <Content>\r\n                <section>\r\n                    <UserActivity/>\r\n                    <BottomChart>\r\n                        <UserAverageSessions/>\r\n                        <UserPerformance/>\r\n                        <ScoreChart data={data}/>\r\n                    </BottomChart>\r\n                </section>\r\n                <aside>\r\n                    <KeyData icon={caloriesIcon} info={`${data.keyData.calorieCount}kCal`} text='Calories' />\r\n                    <KeyData icon={proteinsIcon} info={`${data.keyData.proteinCount}g`} text='Proteines' />\r\n                    <KeyData icon={glucidesIcon} info={`${data.keyData.carbohydrateCount}g`} text='Glucides' />\r\n                    <KeyData icon={lipidesIcon} info={`${data.keyData.lipidCount}g`} text='Lipides' /> \r\n                </aside>\r\n            </Content>\r\n          </Container>\r\n      </Main>);\r\n}\r\n\r\nexport default UserPage;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Main = styled.main`\r\n  max-width: 1240px;\r\n  margin: auto;\r\n  a{\r\n      margin-top:1em;\r\n      display:flex;\r\n      flex-direction:column;\r\n  }\r\n`\r\n\r\nconst Title = styled.h2`\r\nmargin: 1em 0em;\r\n`\r\n\r\n\r\nfunction HomePage() {\r\n    return ( \r\n        <Main>\r\n            <Title>USER</Title>\r\n            <NavLink to=\"user/12\">12</NavLink>\r\n            <NavLink to=\"user/18\">18</NavLink>\r\n        </Main>\r\n     );\r\n}\r\n\r\nexport default HomePage;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Main = styled.main`\r\n  max-width: 1240px;\r\n  margin: auto;\r\n  a{\r\n      margin-top:1em;\r\n      display:flex;\r\n      flex-direction:column;\r\n  }\r\n`\r\nconst Title = styled.h2`\r\nmargin: 1em 0em;\r\n`\r\n\r\nexport default function ErrorPage() {\r\n    return (\r\n        <Main>\r\n\t\t\t\t<Title>404</Title>\r\n\t\t\t\t<p>Oups ! La page que vous demandez n'existe pas.</p>\r\n\t\t\t\t<Link to='/'>Retourner sur la page d’accueil</Link>\r\n\t\t\t</Main>\r\n    )\r\n}\r\n","import React from \"react\";\nimport {BrowserRouter as Router,Switch,Route} from \"react-router-dom\";\nimport Header from './components/Header';\nimport UserPage from \"./pages/UserPage\";\nimport HomePage from \"./pages/HomePage\"\nimport ErrorPage from \"./pages/ErrorPage\";\n\nexport default function App() {\n  return (\n    <Router>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/user/:id\" component={UserPage} />\n          <Route component={ErrorPage}/>\n        </Switch>\n    </Router>\n  );\n}\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}